import{o as n,c as t,d as e}from"./app.06ca5107.js";const o='{"title":"","description":"","frontmatter":{},"relativePath":"vanvr-webgl/UiAndControl.md","lastUpdated":1630365662009}',s={},r=[e('<div class="info custom-block"><p class="custom-block-title">Ui and Controls</p><p>This page is explaining ui and ui interactions.</p></div><p><strong>ControlAssist.cs:</strong> Provides a clickable interface for the orbit camera. Generally toggled through the Control Assist button in Analysis Mode。</p><p><strong>ProportionIndicator.cs:</strong> Manages the UI element proportion indicator, highlighting organs based on selected specimen types.</p><p><strong>AnnotationDetailPanel.cs:</strong> Manages and displays all current annotation data; ensures only a single AV source is playing at any time.</p><p><strong>AnnotationDisplay.cs:</strong> Manages the display and selection of current annotation indicators.</p><p><strong>AnnotationIndicator.cs:</strong> A single instance of a numbered UI indicator, clickable to summon the attached annotation.</p><p><strong>AnnotationSelector.cs:</strong> A UI bar for selecting annotations on the current specimen either by paging left/right or clicking from a drop-up select menu.</p><p><strong>ContentAudio.cs:</strong> Rich media audio content that renders to AnnotationDetailPanel</p><p><strong>ContentImage.cs:</strong> Rich media image content that renders to AnnotationDetailPanel</p><p><strong>ContentSeparator.cs:</strong> A separator that appears between entries in AnnotationDetailPanel</p><p><strong>ContentText.cs:</strong> Text content that renders to AnnotationDetailPanel</p><p><strong>ContentVideo.cs:</strong> Rich media video content that renders to AnnotationDetailPanel. Can be either from YouTube or a direct media link.</p><p><strong>DropUpAnnotationEntry.cs:</strong> Clickable entry for drop-up menu in AnnotationSelector</p><p><strong>FullScreenPlayer.cs:</strong> Full-screen player for annotation rich media.</p><p><strong>AnnotationContentBlock.cs:</strong> Generic interface for all content blocks.</p><p><strong>MultimediaContent.cs:</strong> Parent class for rich media content classes; implements common controls and queries.</p><p><strong>ConfirmationPanel.cs:</strong> Displays yes/no choices for users, with bindable behaviour for each.</p><p><strong>ErrorPanel.cs:</strong> Displays dismissible error information.</p><p><strong>HoverButton.cs:</strong> Binds simple text/icon color animations to PointerEnter/Exit events</p><p><strong>ModeChangeButton.cs:</strong> Binds a simple mode-change event to a button.</p><p><strong>ToolTip.cs:</strong> Binds an animated tooltip, activated on button hover.</p><p><strong>UIToggle.cs:</strong> Manages an on/off toggle with simple state and animations (e.g. ControlAssist in analysis mode)</p><p><strong>UITwoStateIndicator.cs:</strong> Binds icon/text changes to changes in application state.</p><p><strong>HelpPanel.cs:</strong> TO IMPLEMENT; currently just knows what view mode it is in when enabled. Intention is to give context-specific help to users.</p><p><strong>DisclaimerPanel.cs:</strong> UI functionality for the disclaimer/policies panel that appears before entrance.</p><p><strong>StartButton.cs:</strong> Implements the hold-to-enter button on Landing view.</p><p><strong>GeneralSettingsPanel.cs:</strong> Implements UI for the Settings panel.</p><p><strong>DisplayResolutionButton.cs:</strong> Implements a single selectable resolution button.</p><p><strong>LabOption.cs:</strong> A UI representation of a single lab for the SelectorMenu</p><p><strong>SelectorButton.cs:</strong> Generic button class for all selectable content in the Selector Menu</p><p><strong>SelectorMenu.cs:</strong> Populates and manages the “Shelf” menu in Tray mode.</p><p><strong>SpecimenLoadingIndicator.cs:</strong> General loading indicator for specimens. Not used if we are smart loading specimens.</p><p><strong>SpecimenCart.cs:</strong> Attached to 3D cart object; responsible for spawning the correct number of trays and placing specimens on them.</p>',33)];s.render=function(e,o,s,a,i,c){return n(),t("div",null,r)};export{o as __pageData,s as default};
